AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template for Amazon Bedrock Agent with Link Budget Calculator Action Group'

Parameters:
  AgentName:
    Type: String
    Default: 'LinkBudgetAgent'
    Description: 'Name for the Bedrock Agent'
  
  AgentDescription:
    Type: String
    Default: 'Agent for calculating satellite link budgets'
    Description: 'Description for the Bedrock Agent'
  
  ModelId:
    Type: String
    Default: 'anthropic.claude-3-5-sonnet-20241022-v2:0'
    Description: 'Foundation model ID for the Bedrock Agent'

  LambdaFunctionArn:
    Type: String
    Description: 'ARN of the Link Budget Calculator Lambda function'
  
  AgentInstruction:
    Type: String
    Default: 'You are a satellite communications agent analyzing satellite link budgets. Your job is to invoke the lambda function and use the associated knowledgebase to determine if the link margin is acceptable, and provide recommendations to improve it.'
    Description: 'Instructions for the Bedrock Agent'

Resources:
  # IAM Role for Bedrock Agent with AWS Managed Policies
  BedrockAgentRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${AgentName}-bedrock-agent-role'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: bedrock.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonBedrockReadOnly
      Policies:
        - PolicyName: LambdaInvokePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource: !Ref LambdaFunctionArn

  # Bedrock Agent
  LinkBudgetBedrockAgent:
    Type: AWS::Bedrock::Agent
    Properties:
      AgentName: !Ref AgentName
      Description: !Ref AgentDescription
      FoundationModel: !Ref ModelId
      Instruction: !Ref AgentInstruction
      AgentResourceRoleArn: !GetAtt BedrockAgentRole.Arn
      IdleSessionTTLInSeconds: 1800
      ActionGroups:
        - ActionGroupName: 'LinkBudgetCalculator'
          Description: 'Action group for calculating satellite link budgets'
          ActionGroupExecutor:
            Lambda: !Ref LambdaFunctionArn
          FunctionSchema:
            Functions:
              - Name: 'calculateLinkBudget'
                Description: 'Calculates satellite link budget with the provided parameters'
                Parameters:
                  coax_length:
                    Type: 'number'
                    Description: 'Coaxial cable length in feet'
                    Required: true
                  rx_dish_gain:
                    Type: 'number'
                    Description: 'Receive dish gain in dBi'
                    Required: true
                  eirp:
                    Type: 'number'
                    Description: 'EIRP in dBW (default: 50)'
                    Required: false
                  rx_noise_fig:
                    Type: 'number'
                    Description: 'Receiver noise figure in dB (default: 8)'
                    Required: false
                  atmospheric_loss:
                    Type: 'number'
                    Description: 'Atmospheric loss in dB (default: 0.5)'
                    Required: false

  # Bedrock Agent Alias
  LinkBudgetAgentAlias:
    Type: AWS::Bedrock::AgentAlias
    Properties:
      AgentId: !Ref LinkBudgetBedrockAgent
      AgentAliasName: !Sub '${AgentName}-alias'
      Description: 'Alias for Link Budget Agent'

Outputs:
  BedrockAgentId:
    Description: 'ID of the Bedrock Agent'
    Value: !Ref LinkBudgetBedrockAgent
    Export:
      Name: !Sub '${AWS::StackName}-BedrockAgentId'
  
  BedrockAgentArn:
    Description: 'ARN of the Bedrock Agent'
    Value: !GetAtt LinkBudgetBedrockAgent.AgentArn
    Export:
      Name: !Sub '${AWS::StackName}-BedrockAgentArn'
  
  BedrockAgentAliasId:
    Description: 'ID of the Bedrock Agent Alias'
    Value: !GetAtt LinkBudgetAgentAlias.AgentAliasId
    Export:
      Name: !Sub '${AWS::StackName}-BedrockAgentAliasId'
  
  BedrockAgentRoleArn:
    Description: 'ARN of the Bedrock Agent execution role'
    Value: !GetAtt BedrockAgentRole.Arn
    Export:
      Name: !Sub '${AWS::StackName}-BedrockAgentRoleArn'
