AWSTemplateFormatVersion: '2010-09-09'

Description: "Constructs the lambda, with appropriate permissions, which generates
  the TTS (historical bandwidth usage by spot-beam), and RTS (buoy weather data).
  Puts results in S3 bucket"

# parameters to pass to the CFN
Parameters:

    SatComDatasetS3Bucket:
        Type: String
        Description: Bucket for all of the satcom-forecast assets
        Default: "forecast-satcom-capacity"
        
    SatComGenLambdaZipName:
        Type: String
        Description: Name of the lambda zip file generating TTS & RTS datasets
        Default: "datagen-fxns/satcom-forecast-datagen-fxn.zip"
        
        
# creation of AWS resources        
Resources:

  ProcessLambdaFunctionExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AmazonS3FullAccess

  # Note - the Env Vars csv file names are simply used as prefixes - the Lambda will generate unique filenames
  ProcessLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Description: Lambda function to generate TTS & RTS data for Sat Cap Forecast
      Handler: lambda_function.lambda_handler
      Timeout: 60
      Role: !GetAtt ProcessLambdaFunctionExecutionRole.Arn
      Code:
        S3Bucket: !Ref SatComDatasetS3Bucket
        S3Key: !Ref SatComGenLambdaZipName
      Runtime: python3.9
      Environment:
        Variables:
          bucketName: !Ref SatComDatasetS3Bucket
          rtsWeather: maritime-weather.csv
          ttsSatComUsage: satcom-cap.csv
      Tags:
      - Key: Name
        Value: !Join [ "-", [ !Ref "AWS::StackName", ProcessLambdaFunction] ]
        

Outputs:
  LambdaFxnName:
    Value: !Ref ProcessLambdaFunction
